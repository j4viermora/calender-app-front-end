{"version":3,"sources":["types/types.js","reducers/uiReducer.js","reducers/calendarReducer.js","reducers/authReducer.js","reducers/rootReducer.js","store/store.js","helpers/fetch.js","helpers/prepareEvent.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PrivateRoutes .js","router/PublicRoutes.js","router/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","modalOpen","events","activeEvent","checking","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseUrl","process","fetchWithoutToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchWithToken","token","localStorage","getItem","prepareEvent","evento","end","moment","toDate","start","eventAddNew","event","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","login","user","startLogout","dispatch","clear","logout","register","newUser","checkingFinish","useForm","useState","value","setValue","handleInputChange","target","name","LoginScreen","useDispatch","loginEmail","loginPassword","valueLogin","handleLoginInputChange","Registername","RegisterEmail","RegisterPassword1","RegisterPassword2","valueRegister","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","icon","title","text","position","showConfirmButton","timer","Navbar","useSelector","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","console","log","getState","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PrivateRoutes","isAuthenticated","Component","component","rest","props","to","protoTypes","PropTypes","bool","isRequired","func","PublicRoutes","isAuthenticathed","Proptypes","Componet","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f2e4e2b4.chunk.js","sourcesContent":["\nexport const types = {\n\n    uiOpenModal: '[ui] Open modal',\n    uiCloseModal: '[ui] Close modal',\n\n\n    eventSetActive: '[event] Set Active',\n    eventStartAddNew: '[event] Start add new',\n    eventAddNew: '[event] Add new',\n    eventClearActiveEvent: '[event] Clear active event',\n    eventUpdated: '[event] Event updated',\n    eventDeleted: '[event] Event deleted',\n    eventLoaded: '[event] Events loading',\n    eventClearLogout: '[event] Events clear logout' ,\n    \n\n    \n    authCheckingFinish: '[auth] Checking Login finish' ,\n    authStartLogin: '[auth] Start Login' ,\n    authLogin: '[auth] Login' ,\n    authStartRegister: '[auth] Start Register' ,\n    authStartTokenRenew: '[auth] Start Token renew' ,\n    authLogout: '[auth] Logout' ,\n    \n\n}","import { types } from \"../types/types\";\n\nconst initialState = {\n    modalOpen: false,\n}\n\n\n\nexport const uiReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        case types.uiOpenModal:\n            return {\n                ...state,\n                modalOpen: true\n            }\n\n        case types.uiCloseModal:\n            return {\n                ...state,\n                modalOpen: false\n            }\n    \n        default:\n            return state;\n    }\n\n\n}","// import moment from 'moment';\n\nimport { types } from '../types/types';\n\n  // events: [{\n    //     id: new Date().getTime(),\n    //     title: 'Cumpleaños del jefe',\n    //     start: moment().toDate(),\n    //     end: moment().add( 2, 'hours' ).toDate(),\n    //     bgcolor: '#fafafa',\n    //     notes: 'Comprar el pastel',\n    //     user: {\n    //         _id: '123',\n    //         name: 'Fernando'\n    //     }\n    // }],\n\n\n\nconst initialState = {\n    events : [],\n    activeEvent: null\n};\n\n\nexport const calendarReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        \n        case types.eventSetActive:\n            return {\n                ...state,\n                activeEvent: action.payload\n            }\n        \n        case types.eventAddNew:\n            return {\n                ...state,\n                events: [\n                    ...state.events,\n                    action.payload\n                ]\n            }\n    \n        case types.eventClearActiveEvent:\n            return {\n                ...state,\n                activeEvent: null\n            }\n\n\n        case types.eventUpdated:\n            return {\n                ...state,\n                events: state.events.map(\n                    e => ( e.id === action.payload.id ) ? action.payload : e\n                )\n            }\n        \n        case types.eventDeleted:\n            return {\n                ...state,\n                events: state.events.filter(\n                    e => ( e.id !== state.activeEvent.id )\n                ),\n                activeEvent: null\n            }\n        case types.eventLoaded:\n            return {\n             ...state,\n             events: [ ...action.payload ]\n            }\n        case types.eventClearLogout:\n            return{\n                ...state,\n                events: [],\n                activeEvent: null\n            }\n        default:\n            return state;\n    }\n\n\n}\n","import { types } from \"../types/types\"\n\nconst initialState = {\n    checking: true,\n    // uid: null,\n    // name: null\n}\n\nexport const authReducer = ( state = initialState , action ) => {\n \n        switch( action.type ) {\n            case types.authStartLogin:\n                return { \n                    ...state,\n                    checking: false,\n                    ...action.payload\n                }\n            case types.authStartRegister:\n                return {\n                    ...state,\n                    checking: false,\n                    ...action.payload\n                }\n            case types.authCheckingFinish:\n                return{\n                    ...state,\n                    checking: false\n                }\n            case types.authLogout:\n                return{\n                    ...initialState,\n                    checking: false\n                }\n            default:\n                 return state \n        }\n\n}","import { combineReducers } from 'redux';\n\nimport { uiReducer } from './uiReducer';\nimport { calendarReducer } from './calendarReducer';\nimport { authReducer } from './authReducer'\n\n\nexport const rootReducer = combineReducers({\n    ui: uiReducer,\n    calendar: calendarReducer,\n    auth: authReducer\n})\n\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk'\n\nimport { rootReducer } from '../reducers/rootReducer';\n\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nexport const store = createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware( thunk )\n    )\n);\n\n\n","const baseUrl = process.env.REACT_APP_API_URL;\n\n\nconst fetchWithoutToken = (  endpoint, data , method = 'GET')  => {\n    const url = `${ baseUrl }/${ endpoint }`;\n\n    if ( method === 'GET' ){\n        return fetch( url )\n    }else{\n        return fetch( url, {\n            method,\n            headers: {\n                'Content-type': 'application/json'\n            },\n            body : JSON.stringify( data )\n            \n        } )\n    }\n}\n\n\nconst fetchWithToken = ( endpoint, data , method = 'GET'  ) => {\n\n        const url = `${ baseUrl }/${endpoint}`;\n        const token =  localStorage.getItem( 'token' ) || '' ;\n\n        if ( method === 'GET' ){\n            return fetch( url, {\n                method,\n                headers: {\n                    \"x-token\": token\n                }\n            })\n        }else{\n            return fetch( url, {\n                method,\n                headers: {\n                    'Content-type': 'application/json',\n                    \"x-token\": token\n                }, \n                body: JSON.stringify( data ) \n            })\n       \n        };\n   \n\n}\n\n\nexport {\n    fetchWithToken,\n    fetchWithoutToken\n}","import moment from 'moment'\n\nconst prepareEvent = ( events = [] ) => {\n\n    return events.map(\n        (evento) => ({\n            ...evento,\n            end: moment( evento.end ).toDate(),\n            start: moment( evento.start ).toDate()\n        })\n    )\n\n\n}\n\n\nexport default prepareEvent","import Swal from \"sweetalert2\";\nimport { fetchWithToken } from \"../helpers/fetch\";\nimport prepareEvent from \"../helpers/prepareEvent\";\nimport { types } from \"../types/types\";\n\nexport const eventStartAddNew = ( event ) => {\n\n\n    return async( dispatch, getState ) => {\n\n        const { uid, name } = getState().auth;\n\n        try{\n\n            const resp = await fetchWithToken( 'events', event, 'POST' )\n            const body = await resp.json()\n            \n            if ( body.ok ){\n\n                event.id = body.evento.id;\n                event.user = {\n                    _id : uid ,\n                    name: name ,\n                }\n\n                console.log( event )\n                dispatch( eventAddNew( event ) )\n                Swal.fire({\n                    position: 'top-end',\n                    icon: 'success',\n                    title: 'Tarea guardada',\n                    showConfirmButton: false,\n                    timer: 1500\n                  })\n            }\n        }catch( err ){\n            Swal.fire({\n                icon: 'error',\n                title: 'Algo ha fallado',\n                text: err\n            })\n        }\n        \n\n\n    }\n}\n\nconst eventAddNew = ( event ) => ({\n    type: types.eventAddNew,\n    payload: event\n});\n\nexport const eventSetActive = (event) => ({\n    type: types.eventSetActive,\n    payload: event\n});\n\nexport const eventClearActiveEvent = () => ({ \n    type: types.eventClearActiveEvent \n});\n\nexport const eventStartUpdated = ( event ) => {\n   \n    return async( dispatch ) => {\n\n        try {\n\n            \n\n            const resp = await fetchWithToken( `events/${ event.id }`, event , 'PUT' )\n            const body = await resp.json()\n\n            console.log( body )\n\n            if( body.ok ){\n                dispatch( eventUpdated( body.evento ) )\n                Swal.fire({\n                    icon : 'succes',\n                    position: 'top-end',\n                    title: 'Tu nota a sido guardad'\n                })\n            }else{\n                Swal.fire({\n                    icon: 'error',\n                    title: 'Algo anda mal',\n                    text: body.msg\n                })\n            }\n\n        }catch( err ) {\n           console.log(err)\n        }\n\n\n\n    }\n}\n\nconst eventUpdated = ( event ) => ({\n    type: types.eventUpdated,\n    payload: event\n});\n\n\n\nexport const eventStartDelete = ( event ) => {\n    return  async( dispatch, getState ) => {\n            \n        const { id } = getState().calendar.activeEvent;\n\n\n        try{\n            const resp = await fetchWithToken( `events/${ id }`, event, 'DELETE' );\n            const body =  await resp.json()\n\n            if( body.ok ) {\n                \n                \n\n                dispatch( eventDeleted( event ) )\n\n                Swal.fire({\n                    icon : 'success',\n                    title: 'Tarea borrada con exito'\n                })\n\n\n            }else{\n                Swal.fire({\n                    icon: 'error',\n                    text: body.msg\n                })\n            }\n\n        }catch( err ){\n            console.log(err)\n        }\n        \n\n    \n\n\n    }\n}\n\n\nconst eventDeleted = () => ({\n     type: types.eventDeleted\n    });\n\n\n\n\nexport const eventStartLoading = () => {\n\n    return async ( dispatch ) => {\n\n        try{\n\n            const resp = await fetchWithToken( 'events' )\n            const body = await resp.json()\n\n           const events = prepareEvent( body.eventos );\n\n            dispatch( eventLoaded( events ) )\n\n\n        }catch( err ){\n\n            console.log(err)\n\n        }\n\n\n    }\n}\n\n\nconst eventLoaded = ( event ) => ({\n\n    type: types.eventLoaded,\n    payload: event\n\n})\n\nexport const clearEventLogout = () => ({\n    type: types.eventClearLogout\n})","import Swal from \"sweetalert2\";\nimport { fetchWithoutToken, fetchWithToken } from \"../helpers/fetch\"\nimport { types } from '../types/types'\nimport { clearEventLogout } from \"./events\";\n\nexport const startLogin = ( email, password  ) => {\n    \n    return async( dispatch )=> {\n\n        const resp = await fetchWithoutToken( 'auth',{ email, password }, 'POST' );\n        const body = await resp.json();\n\n         if( body.ok ) {\n\n            localStorage.setItem( 'token', body.token );\n            localStorage.setItem( 'token-init-date', new Date().getTime() );\n\n            dispatch( login( { \n                uid: body.uid,\n                name: body.name\n            } ) )\n         }else{\n             Swal.fire( 'Error', body.msg, 'error' )\n         }\n        \n    }\n}\n\nexport const startRegister = ( name, email, password ) => {\n\n    return async ( dispatch ) => {\n\n            const resp = await fetchWithoutToken( 'auth/new', { name, email, password }, 'POST' );\n            const body = await resp.json();\n\n            if ( body.ok ) {\n\n                localStorage.setItem( 'token', body.token );\n                localStorage.setItem( 'token-init-time', new Date().getTime() );\n\n                dispatch( register( {\n                    name: body.name,\n                    uid: body.uid\n                } ) )\n\n                Swal.fire({\n                    position: 'top-end',\n                    icon:\"success\",\n                    title:\"Registro exitoso\",\n                    showConfirmButton: false,\n                    timer: 1500\n                })\n\n            }else{\n                Swal.fire( { \n                    icon: 'error',\n                    title: 'Algo anda mal',\n                    text: body.msg\n                 } )\n            }\n    } \n}\n\n\nexport const startChecking = () => {\n    return async( dispatch ) => {\n\n       \n        const resp = await fetchWithToken( 'auth/renew' );\n        const body = await resp.json()\n\n        // console.log(body)\n       \n        if( body.ok ) {\n\n            localStorage.setItem( 'token', body.token );\n            localStorage.setItem( 'token-init-date', new Date().getTime());\n\n            dispatch( login( {\n                uid: body.uid,\n                name: body.name\n            } ) )\n            \n        }else{\n\n            // Swal.fire({\n            //         icon: 'error',\n            //         title: 'Error',\n            //         text: body.msg,\n            //         showClass: {\n            //           popup: 'animate__animated animate__fadeInDown'\n            //         },\n            //         hideClass: {\n            //           popup: 'animate__animated animate__fadeOutUp'\n            //         }\n                  \n            // })\n\n            dispatch( checkingFinish() )\n\n        }\n\n\n\n    }\n}\n\n\nconst login = ( user ) =>{\n    return {\n        type: types.authStartLogin,\n        payload: user\n    }\n}\n\nexport const startLogout = (  ) => {\n\n    return ( dispatch ) => {\n\n        localStorage.clear();\n\n        dispatch( logout() );\n\n        dispatch( clearEventLogout() )\n\n    }\n}\n\nconst logout = () => ( {\n    \n    type : types.authLogout\n\n} ) \n\n\n\nconst register = ( newUser ) => {\n\n    return{\n        type: types.authStartLogin,\n        payload: newUser\n    }\n\n}\n\nconst checkingFinish = () => ({\n    type: types.authCheckingFinish\n})","import { useState } from \"react\";\n\n\n\nconst useForm = ( initialState = {} ) => {\n\n    const [ value , setValue ] = useState( initialState )\n\n    const handleInputChange = ( e ) => {\n\n        const target = e.target\n\n        setValue( {\n            ...value,\n            [ target.name ]: target.value\n        } )\n\n        \n    } \n    \n    return [ value, handleInputChange ]\n\n}\n\n\nexport default useForm","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport Swal from 'sweetalert2';\n\nimport useForm from '../../hooks/useForm'\nimport { startLogin, startRegister } from '../../actions/auth';\nimport './login.css';\n\n\n\n\nexport const LoginScreen = () => {\n    \n\n    const dispatch = useDispatch()\n\n    const [ valueLogin, handleLoginInputChange ] = useForm( {\n        loginEmail: '',\n        loginPassword: ''\n    } )\n    const [ valueRegister, handleRegisterInputChange ] = useForm( {\n        Registername: '' ,\n        RegisterEmail: '',\n        RegisterPassword1: '',\n        RegisterPassword2: '',\n    } )\n\n    const { Registername, RegisterEmail ,RegisterPassword1 ,RegisterPassword2 } = valueRegister;\n\n    const { loginEmail, loginPassword } = valueLogin;\n\n    const handlerLogin = ( e ) => {\n\n        e.preventDefault()\n\n        dispatch( startLogin( loginEmail, loginPassword ) )\n\n        // console.log( valueLogin )\n\n    }\n\n    const handleRegister = ( e ) => {\n\n        e.preventDefault()\n\n        if ( RegisterPassword1 !== RegisterPassword2 ) {\n           return Swal.fire( {\n                icon : 'error',\n                title: 'Oops',\n                text: 'Las contraseñas no coinciden'\n            } )\n        }\n              \n        dispatch( startRegister( Registername, RegisterEmail ,RegisterPassword1 ) )\n\n    }\n\n\n\n    return (\n\n        <div className=\"container login-container\">\n            <div className=\"row\">\n                <div className=\"col-md-6 login-form-1\">\n                    <h3>Ingreso</h3>\n                    <form \n                    onSubmit={ handlerLogin }\n                    >\n                        <div className=\"form-group\">\n                            <input \n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                                name='loginEmail'\n                                value={ loginEmail }\n                                onChange={ handleLoginInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Contraseña\"\n                                name='loginPassword'\n                                value={ loginPassword }\n                                onChange={ handleLoginInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"submit\"\n                                className=\"btnSubmit\"\n                                value=\"Login\" \n                            />\n                        </div>\n                    </form>\n                </div>\n\n                <div className=\"col-md-6 login-form-2\">\n                    <h3>Registro</h3>\n                    <form onSubmit={ handleRegister } >\n                        <div className=\"form-group\">\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Nombre\"\n                                name='Registername'\n                                value={ Registername }\n                                onChange={ handleRegisterInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"email\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                                name='RegisterEmail'\n                                value={ RegisterEmail }\n                                onChange={ handleRegisterInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Contraseña\" \n                                name='RegisterPassword1'\n                                value={ RegisterPassword1 }\n                                onChange={ handleRegisterInputChange }\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Repita la contraseña\" \n                                name='RegisterPassword2'\n                                value={ RegisterPassword2 }\n                                onChange={ handleRegisterInputChange }\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input \n                                type=\"submit\" \n                                className=\"btnSubmit\" \n                                value=\"Crear cuenta\" />\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { startLogout } from '../../actions/auth'\n// import { clearEventLogout } from '../../actions/events'\n\nexport const Navbar = () => {\n    \n    const { name } = useSelector( state => state.auth )\n    const dispatch = useDispatch()\n\n    const handleLogout = ( e ) => {\n        e.preventDefault()\n\n        dispatch( startLogout() )\n        // dispatch( clearEventLogout() )\n    }\n\n\n\n    return (\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\n            <span className=\"navbar-brand\">\n               Hola { name }\n            </span>\n            \n            <button \n            className=\"btn btn-outline-danger\"\n            onClick={ handleLogout }\n            >\n                <i className=\"fas fa-sign-out-alt\"></i>\n                <span> Salir</span>\n            </button>\n\n        </div>\n    )\n}\n","export const messages = {\n    allDay: 'Todo el día',\n    previous: '<',\n    next: '>',\n    today: 'Hoy',\n    month: 'Mes',\n    week: 'Semana',\n    day: 'Día',\n    agenda: 'Agenda',\n    date: 'Fecha',\n    time: 'Hora',\n    event: 'Evento',\n    noEventsInRange: 'No hay eventos en este rango',\n    showMore: total => `+ Ver más (${total})`\n};","import React from 'react'\n\nexport const CalendarEvent = ({ event }) => {\n\n    const { title, user } = event;\n\n    return (\n        <div>\n            <strong> { title } </strong>\n            <span>- { user.name } </span>\n        </div>\n    )\n}\n","import { types } from '../types/types';\n\n\n\nexport const uiOpenModal = () => ({ type: types.uiOpenModal });\nexport const uiCloseModal = () => ({ type: types.uiCloseModal });","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport moment from 'moment';\nimport Modal from 'react-modal';\nimport DateTimePicker from 'react-datetime-picker';\nimport Swal from 'sweetalert2';\n\nimport { uiCloseModal } from '../../actions/ui';\nimport {  eventClearActiveEvent, eventStartAddNew, eventStartUpdated } from '../../actions/events';\n\n\nconst customStyles = {\n    content : {\n      top                   : '50%',\n      left                  : '50%',\n      right                 : 'auto',\n      bottom                : 'auto',\n      marginRight           : '-50%',\n      transform             : 'translate(-50%, -50%)'\n    }\n};\nModal.setAppElement('#root');\n\nconst now = moment().minutes(0).seconds(0).add(1,'hours'); // 3:00:00\nconst nowPlus1 = now.clone().add(1, 'hours');\n\nconst initEvent = {\n    title: '',\n    notes: '',\n    start: now.toDate(),\n    end: nowPlus1.toDate()\n}\n\n\nexport const CalendarModal = () => {\n\n    const { modalOpen } = useSelector( state => state.ui );\n    const { activeEvent } = useSelector( state => state.calendar );\n    const dispatch = useDispatch();\n\n    const [ dateStart, setDateStart ] = useState( now.toDate() );\n    const [ dateEnd, setDateEnd ] = useState( nowPlus1.toDate() );\n    const [ titleValid, setTitleValid ] = useState(true);\n    \n    const [formValues, setFormValues] = useState( initEvent );\n\n    const { notes, title, start, end } = formValues;\n\n    useEffect(() => {\n        if ( activeEvent ) {\n            setFormValues( activeEvent );\n        } else {\n            setFormValues( initEvent );\n        }\n    }, [activeEvent, setFormValues])\n\n\n\n    const handleInputChange = ({ target }) => {\n        setFormValues({\n            ...formValues,\n            [target.name]: target.value\n        });\n    }\n\n\n    const closeModal = () => {\n        // TODO: cerrar el modal\n        dispatch( uiCloseModal() );\n        dispatch( eventClearActiveEvent() );\n        setFormValues( initEvent );\n    }\n\n    const handleStartDateChange = ( e ) => {\n        setDateStart( e );\n        setFormValues({\n            ...formValues,\n            start: e\n        })\n    }\n    \n    const handleEndDateChange = ( e ) => {\n        setDateEnd( e );\n        setFormValues({\n            ...formValues,\n            end: e\n        })\n    }\n\n    const handleSubmitForm = (e) => {\n        e.preventDefault();\n        \n        const momentStart = moment( start );\n        const momentEnd = moment( end );\n\n        if ( momentStart.isSameOrAfter( momentEnd ) ) {\n            return Swal.fire('Error','La fecha fin debe de ser mayor a la fecha de inicio', 'error');\n        }\n\n        if ( title.trim().length < 2 ) {\n            return setTitleValid(false);\n        }\n\n        if ( activeEvent ) {\n            dispatch( eventStartUpdated( formValues ) )\n        } else {\n            dispatch( eventStartAddNew( formValues ) );\n        }\n\n\n        setTitleValid(true);\n        closeModal();\n        \n    }\n\n\n    return (\n        <Modal\n          isOpen={ modalOpen }\n          onRequestClose={ closeModal }\n          style={ customStyles }\n          closeTimeoutMS={ 200 }\n          className=\"modal\"\n          overlayClassName=\"modal-fondo\"\n        >\n            <h1> { (activeEvent)? 'Editar evento': 'Nuevo evento' } </h1>\n            <hr />\n            <form \n                className=\"container\"\n                onSubmit={ handleSubmitForm }\n            >\n\n                <div className=\"form-group\">\n                    <label>Fecha y hora inicio</label>\n                    <DateTimePicker\n                        onChange={ handleStartDateChange }\n                        value={ dateStart }\n                        className=\"form-control\"\n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Fecha y hora fin</label>\n                    <DateTimePicker\n                        onChange={ handleEndDateChange }\n                        value={ dateEnd }\n                        minDate={ dateStart }\n                        className=\"form-control\"\n                    />\n                </div>\n\n                <hr />\n                <div className=\"form-group\">\n                    <label>Titulo y notas</label>\n                    <input \n                        type=\"text\" \n                        className={ `form-control ${ !titleValid && 'is-invalid' } `}\n                        placeholder=\"Título del evento\"\n                        name=\"title\"\n                        autoComplete=\"off\"\n                        value={ title }\n                        onChange={ handleInputChange }\n                    />\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\n                </div>\n\n                <div className=\"form-group\">\n                    <textarea \n                        type=\"text\" \n                        className=\"form-control\"\n                        placeholder=\"Notas\"\n                        rows=\"5\"\n                        name=\"notes\"\n                        value={ notes }\n                        onChange={ handleInputChange }\n                    ></textarea>\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\n                </div>\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-outline-primary btn-block\"\n                >\n                    <i className=\"far fa-save\"></i>\n                    <span> Guardar</span>\n                </button>\n\n            </form>\n\n        </Modal>\n    )\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { uiOpenModal } from '../../actions/ui';\n\nexport const AddNewFab = () => {\n\n    const dispatch = useDispatch();\n\n    const handleClickNew = () => {\n        dispatch( uiOpenModal() );\n    }\n\n\n    return (\n        <button\n            className=\"btn btn-primary fab\"\n            onClick={ handleClickNew }\n        >\n            <i className=\"fas fa-plus\"></i>\n        </button>\n    )\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux'\nimport { eventStartDelete } from '../../actions/events';\n\nexport const DeleteEventFab = () => {\n\n    const dispatch = useDispatch();\n\n    const handleDelete = () => {\n        dispatch( eventStartDelete() );\n    }\n\n    return (\n        <button\n            className=\"btn btn-danger fab-danger\"\n            onClick={ handleDelete }\n        >\n            <i className=\"fas fa-trash\"></i>\n            <span> Borrar evento </span>\n        </button>\n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport { useDispatch, useSelector } from 'react-redux';\nimport moment from 'moment';\n\nimport { Navbar } from '../ui/Navbar';\nimport { messages } from '../../helpers/calendar-messages-es';\nimport { CalendarEvent } from './CalendarEvent';\nimport { CalendarModal } from './CalendarModal';\n\nimport { uiOpenModal } from '../../actions/ui';\n\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport { eventSetActive, eventClearActiveEvent, eventStartLoading } from '../../actions/events';\nimport 'moment/locale/es';\nimport { AddNewFab } from '../ui/AddNewFab';\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\n\nmoment.locale('es');\n\nconst localizer = momentLocalizer(moment);\n\nexport const CalendarScreen = () => {\n\n\n    const dispatch = useDispatch();\n    const { events, activeEvent } = useSelector( state => state.calendar );\n    const { uid } =  useSelector( state => state.auth )\n   \n    const [lastView, setLastView] = useState( localStorage.getItem('lastView') || 'month' );\n\n    useEffect( () => {\n\n        dispatch( eventStartLoading() )\n\n\n    } ,[ dispatch ] )\n\n\n\n    const onDoubleClick = (e) => {\n        // console.log(e);\n        dispatch( uiOpenModal() );\n    }\n\n    const onSelectEvent = (e) => {\n        dispatch( eventSetActive( e ) );\n    }\n\n    const onViewChange = (e) => {\n        setLastView(e);\n        localStorage.setItem('lastView', e);\n    }\n\n    const onSelectSlot = (e) => {\n        // console.log(e)\n        dispatch( eventClearActiveEvent() );\n    }\n\n\n    const eventStyleGetter = ( event, start, end, isSelected ) => {\n\n\n         \n\n        const style = {\n            backgroundColor: ( uid === event.user._id ) ? 'blue' : 'red' ,\n            borderRadius: '0px',\n            opacity: 0.8,\n            display: 'block',\n            color: 'white'\n        }\n\n\n        return {\n            style\n        }\n    };\n\n    return (\n        <div className=\"calendar-screen\">\n            <Navbar />\n            \n\n            <Calendar\n                localizer={ localizer }\n                events={ events }\n                startAccessor=\"start\"\n                endAccessor=\"end\"\n                messages={ messages }\n                eventPropGetter={ eventStyleGetter }\n                onDoubleClickEvent={ onDoubleClick }\n                onSelectEvent={ onSelectEvent }\n                onView={ onViewChange }\n                onSelectSlot={ onSelectSlot }\n                selectable={ true }\n                view={ lastView }\n                components={{\n                    event: CalendarEvent\n                }}\n            />\n\n\n\n            <AddNewFab />\n\n\n            {\n                (activeEvent) && <DeleteEventFab />\n            }\n            \n\n            <CalendarModal />\n\n\n\n        </div>\n    )\n}\n","import React from 'react'\nimport { Redirect, Route } from 'react-router-dom'\nimport PropTypes from 'prop-types';\n\nexport const PrivateRoutes  = ({\n    isAuthenticated,\n    component : Component,\n    ...rest\n}) => {\n    return (\n        <Route \n            { ...rest }\n            component = { ( props ) => (\n                        ( isAuthenticated )\n                          ? ( <Component { ...props }  /> )\n                          : ( <Redirect to='/login'   /> ) \n                    ) \n        }\n        />\n    )\n}\n\nPrivateRoutes.protoTypes = {\n    isAuthenticated : PropTypes.bool.isRequired,\n    Component: PropTypes.func.isRequired\n}","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport Proptypes from 'prop-types';\n\nexport const PublicRoutes = ({\n        isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n    return (\n        <Route \n            { ...rest }\n            component = { ( props ) => (\n                   ( isAuthenticated )\n                   ? ( <Redirect to = '/' />)  \n                   : ( <Component { ...props } /> )  \n            )\n          }\n        \n        />   \n    )\n}\n\nPublicRoutes.protoTypes = {\n    isAuthenticathed: Proptypes.bool.isRequired,\n    Componet : Proptypes.func.isRequired\n}","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Redirect\n  } from 'react-router-dom';\n\n\nimport { startChecking } from '../actions/auth';\nimport { LoginScreen } from '../components/auth/LoginScreen';\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\nimport { PrivateRoutes } from './PrivateRoutes ';\nimport { PublicRoutes } from './PublicRoutes';\n\nexport const AppRouter = () => {\n    \n    \n\n    const { uid } = useSelector(state => state.auth)\n\n    const dispatch = useDispatch()\n\n    useEffect( () => {\n\n        dispatch( startChecking() )\n\n    }, [ dispatch ] )\n   \n\n    return (\n        <Router>\n            <div>\n                <Switch>\n                    <PrivateRoutes\n                    exact \n                    path=\"/\" \n                    component={ CalendarScreen  }\n                    isAuthenticated={ !!uid }\n                     />      \n                    <PublicRoutes\n                    exact \n                    path=\"/login\" \n                    component={ LoginScreen }\n                    isAuthenticated={ !!uid } \n                    />\n\n                    <Redirect to=\"/\" />   \n                </Switch>\n            </div>\n        </Router>\n    )\n}\n\n","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport { store } from './store/store';\nimport { AppRouter } from './router/AppRouter'\n\nexport const CalendarApp = () => {\n    return (\n        <Provider store={ store }>\n            <AppRouter />\n        </Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\n\nimport './styles.css';\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}